{"version":3,"sources":["components/Maps.js","components/SideButt.js","components/SideBar.js","components/Source.js","components/Item.js","components/List.js","components/Side.js","App.js","serviceWorker.js","index.js"],"names":["MyMapComponent","withScriptjs","withGoogleMap","props","react_default","a","createElement","lib","role","aria-label","defaultZoom","zoom","defaultCenter","lat","lng","center","markers","filter","marker","isVisble","map","id","venueInfo","venues","find","venue","key","position","animation","window","google","maps","Animation","DROP","onClick","controlMarker","isOpen","bestPhoto","Fragment","src","concat","prefix","suffix","alt","name","location","address","Maps","Object","assign","this","googleMapURL","loadingElement","style","height","containerElement","width","mapElement","overflow","Component","SideButt","className","click","SideBar","components_SideButt","drawOpen","Source","keys","client_id","client_secret","v","join","Accept","endPiont","method","url","fetch","baseURL","auth","urlBuilder","then","res","json","API","simpleFetch","VID","ListItem","_this","tabIndex","controlListClick","categories","icon","VenueList","Item","Side","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFilterVenues","state","query","trim","toLowerCase","includes","handleChange","e","setState","target","value","isMatched","updateState","type","placeholder","onChange","List","App","closeMarker","getVenuesDetails","newVenue","response","catch","error","console","log","handleSideBarOpen","prevState","sideBarOpen","obj","_this2","search","near","results","geocode","feature","geometry","err","sideOpen","components_Side","components_SideBar","display","Maps_Maps","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0RAIMA,EAAiBC,uBAAaC,wBAAc,SAACC,GAAD,OAEhDC,EAAAC,EAAAC,cAACC,EAAA,UAAD,CACEC,KAAK,cACLC,aAAW,aACXC,YAAa,EACbC,KAAMR,EAAMQ,KACZC,cAAe,CAAEC,KAAM,OAAQC,IAAK,SACpCC,OAAQZ,EAAMY,QAEbZ,EAAMa,SACHb,EAAMa,QAAQC,OAAO,SAAAC,GAAM,OAAIA,EAAOC,WAAUC,IAAI,SAACF,EAAQG,GACzD,IAAMC,EAAYnB,EAAMoB,OAAOC,KAAK,SAAAC,GAAK,OAAIA,EAAMJ,KAAOH,EAAOG,KACjE,OAEIjB,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACAmB,IAAKL,EACLM,SAAU,CAAEd,IAAKK,EAAOL,IAAKC,IAAKI,EAAOJ,KACzCc,UAAYC,OAAOC,OAAOC,KAAKC,UAAUC,KACzCC,QAAS,kBAAM/B,EAAMgC,cAAcjB,KAG9BA,EAAOkB,QACJd,EAAUe,WACVjC,EAAAC,EAAAC,cAACC,EAAA,WAAD,KACIH,EAAAC,EAAAC,cAACF,EAAAC,EAAMiC,SAAP,KACIlC,EAAAC,EAAAC,cAAA,OAAKiC,IAAG,GAAAC,OAAKlB,EAAUe,UAAUI,OAAzB,WAAAD,OAAyClB,EAAUe,UAAUK,QAAUC,IAAG,GAAAH,OAAKlB,EAAUsB,QACjGxC,EAAAC,EAAAC,cAAA,aAAKgB,EAAUsB,MACfxC,EAAAC,EAAAC,cAAA,aAAKgB,EAAUuB,SAASC,kBAanCC,mLAIb,OACI3C,EAAAC,EAAAC,cAACN,EAADgD,OAAAC,OAAA,GACIC,KAAK/C,MADT,CAGAgD,aAAa,8FACbC,eAAgBhD,EAAAC,EAAAC,cAAA,OAAK+C,MAAO,CAAEC,OAAM,UACpCC,iBAAkBnD,EAAAC,EAAAC,cAAA,OAAK+C,MAAO,CAAEC,OAAM,QAAWE,MAAM,4BACvDC,WAAYrD,EAAAC,EAAAC,cAAA,OAAK+C,MAAO,CAAEC,OAAM,OAAUI,SAAS,OAAQ/B,SAAS,sBAX9CgC,aClCnBC,EATE,SAAAzD,GAAK,OAElBC,EAAAC,EAAAC,cAAA,UAASG,aAAW,iBAAkBoD,UAAU,gBAAgB3B,QAAS/B,EAAM2D,OAC3E1D,EAAAC,EAAAC,cAAA,OAAKuD,UAAU,uBACfzD,EAAAC,EAAAC,cAAA,OAAKuD,UAAU,uBACfzD,EAAAC,EAAAC,cAAA,OAAKuD,UAAU,yBCGRE,EAPC,SAAA5D,GAAK,OACbC,EAAAC,EAAAC,cAAA,OAAKuD,UAAU,sBACfzD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0D,EAAD,CAAUF,MAAO3D,EAAM8D,cCH7BC,yGAEE,MAAO,+DAGP,IAAMC,EAAM,CACRC,UAAW,mDACXC,cAAe,mDACfC,EAAG,YAEP,OAAOtB,OAAOmB,KAAKA,GACd/C,IAAI,SAAAM,GAAG,SAAAc,OAAOd,EAAP,KAAAc,OAAc2B,EAAKzC,MAC1B6C,KAAK,sCAGV,MAAM,CACFC,OAAQ,wDAGGC,EAAUC,EAAQC,GACjC,OAAOC,MAAK,GAAApC,OAAI0B,EAAOW,WAAXrC,OAAuBiC,EAAvB,KAAAjC,OAAmC0B,EAAOY,OAA1C,KAAAtC,OAAoD0B,EAAOa,WACnEJ,KACCK,KAAK,SAAAC,GAAG,OAAIA,EAAIC,4CAEPP,GACd,OAAIA,EAGG3B,OAAOmB,KAAKQ,GACdvD,IAAI,SAAAM,GAAG,SAAAc,OAAOd,EAAP,KAAAc,OAAcmC,EAAIjD,MACzB6C,KAAK,KAJC,YASEY,sGACHR,GACV,OAAOT,EAAOkB,YAAY,iBAAkB,MAAOT,4CAE/BU,GACpB,OAAOnB,EAAOkB,YAAP,WAAA5C,OAA8B6C,GAAO,8CAE1BA,GAClB,OAAOnB,EAAOkB,YAAP,WAAA5C,OAA8B6C,EAA9B,WAA4C,gBC/B5CC,mLAVF,IAAAC,EAAArC,KACL,OACI9C,EAAAC,EAAAC,cAAA,MAAME,KAAK,SAASgF,SAAS,IAAI/E,aAAYyC,KAAK/C,MAAMyC,KAAOiB,UAAU,OAAO3B,QAAS,kBAAMqD,EAAKpF,MAAMsF,iBAAiBF,EAAKpF,SAC5HC,EAAAC,EAAAC,cAAA,OAAKiC,IAAKW,KAAK/C,MAAMuF,WAAW,GAAGC,KAAKlD,OAAO,KAAKS,KAAK/C,MAAMuF,WAAW,GAAGC,KAAKjD,OAClFC,IAAKO,KAAK/C,MAAMuF,WAAW,GAAG9C,OAC7BM,KAAK/C,MAAMyC,aANLe,aCaRiC,mLAXF,IAAAL,EAAArC,KACL,OACI9C,EAAAC,EAAAC,cAAA,MAAIuD,UAAU,YAAYpD,aAAW,kBAAkB+E,SAAS,KAC3DtC,KAAK/C,MAAMoB,QACR2B,KAAK/C,MAAMoB,OAAOH,IAAI,SAACK,GAAD,OAClBrB,EAAAC,EAAAC,cAACuF,EAAD7C,OAAAC,OAAA,CAAUvB,IAAKD,EAAMJ,IAAQI,EAA7B,CAAoCgE,iBAAkBF,EAAKpF,MAAMsF,8BANjE9B,aCiDTmC,cA9CX,SAAAA,IAAa,IAAAP,EAAA,OAAAvC,OAAA+C,EAAA,EAAA/C,CAAAE,KAAA4C,IACTP,EAAAvC,OAAAgD,EAAA,EAAAhD,CAAAE,KAAAF,OAAAiD,EAAA,EAAAjD,CAAA8C,GAAAI,KAAAhD,QAMJiD,mBAAqB,WACjB,MAAgC,KAA5BZ,EAAKa,MAAMC,MAAMC,OACFf,EAAKpF,MAAMoB,OAAON,OAAO,SAAAQ,GAAK,OACzCA,EAAMmB,KAAK2D,cAAcC,SAASjB,EAAKa,MAAMC,MAAME,iBAIpDhB,EAAKpF,MAAMoB,QAdTgE,EAgBbkB,aAAe,SAAAC,GACXnB,EAAKoB,SAAS,CAACN,MAAOK,EAAEE,OAAOC,QAC/B,IAAM7F,EAAUuE,EAAKpF,MAAMoB,OAAOH,IAAI,SAAAK,GAClC,IAAMqF,EAAYrF,EAAMmB,KAAK2D,cAAcC,SAAUE,EAAEE,OAAOC,MAAMN,eAC9DrF,EAASqE,EAAKpF,MAAMa,QAAQQ,KAAK,SAAAN,GAAM,OAAIA,EAAOG,KAAOI,EAAMJ,KAMrE,OAJIH,EAAOC,WADR2F,EAKI5F,IAEXqE,EAAKpF,MAAM4G,YAAY,CAAC/F,aA1BxBuE,EAAKa,MAAO,CACRC,MAAM,GACN9E,OAAQ,IAJHgE,wEAgCT,OAEInF,EAAAC,EAAAC,cAAA,OAAMG,aAAW,eAAeoD,UAAU,WACtCzD,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOG,aAAW,mBAAmB+E,SAAS,IAAIwB,KAAM,SAAU3F,GAAI,SAAU4F,YAAa,SAC7FC,SAAUhE,KAAKuD,eACfrG,EAAAC,EAAAC,cAAC6G,EAADnE,OAAAC,OAAA,GACIC,KAAK/C,MADT,CAEAoB,OAAQ2B,KAAKiD,qBACbV,iBAAkBvC,KAAK/C,MAAMsF,4BA1C1B9B,aCgGJyD,cA9FX,SAAAA,EAAYjH,GAAM,IAAAoF,EAAA,OAAAvC,OAAA+C,EAAA,EAAA/C,CAAAE,KAAAkE,IACd7B,EAAAvC,OAAAgD,EAAA,EAAAhD,CAAAE,KAAAF,OAAAiD,EAAA,EAAAjD,CAAAoE,GAAAlB,KAAAhD,KAAM/C,KAeVkH,YAAc,WACV,IAAMrG,EAAUuE,EAAKa,MAAMpF,QAAQI,IAAI,SAAAF,GAEnC,OADAA,EAAOkB,QAAS,EACTlB,IAEXqE,EAAKoB,SAAS,CAAC3F,QAASgC,OAAOC,OAAOsC,EAAKa,MAAMpF,QAASA,MArB5CuE,EAuBlBpD,cAAgB,SAACjB,GACbqE,EAAK8B,cACLnG,EAAOkB,QAAS,EAChBmD,EAAKoB,SAAS,CAAC3F,QAASgC,OAAOC,OAAOsC,EAAKa,MAAMpF,QAASE,KAC1D,IAAMO,EAAQ8D,EAAKa,MAAM7E,OAAOC,KAAK,SAAAC,GAAK,OAAIA,EAAMJ,KAAOH,EAAOG,KAClE8D,EAAImC,iBAAiBpG,EAAOG,IAAI2D,KAAK,SAAAC,GACjC,IAAMsC,EAAWvE,OAAOC,OAAOxB,EAAOwD,EAAIuC,SAAS/F,OACnD8D,EAAKoB,SAAS,CAACpF,OAAQyB,OAAOC,OAAOsC,EAAKa,MAAM7E,OAAQgG,OAE3DE,MAAM,SAAAC,GACHC,QAAQC,IAAI,8BAA+BF,MAjCjCnC,EAsClBE,iBAAmB,SAAAhE,GACf,IAAMP,EAASqE,EAAKa,MAAMpF,QAAQQ,KAAK,SAAAN,GAAM,OAAIA,EAAOG,KAAOI,EAAMJ,KACrEkE,EAAKpD,cAAcjB,IAxCLqE,EA2ClBsC,kBAAoB,WAChBtC,EAAKoB,SAAS,SAACmB,GACX,MAAO,CAACC,aAAcD,EAAUC,gBA3CpCxC,EAAKa,MAAO,CACR7E,OAAO,GACPP,QAAQ,GACRD,OAAQ,GACRJ,KAAM,GACNoH,aAAa,EACbhB,YAAa,SAAAiB,GACTzC,EAAKoB,SAASqB,KATRzC,mFAkDC,IAAA0C,EAAA/E,KACfiC,EAAI+C,OAAO,CACP7B,MAAO,OACP8B,KAAM,OACPnD,KAAK,SAAAoD,GAAW,IACP7G,EAAU6G,EAAQZ,SAAlBjG,OACAR,EAAUqH,EAAQZ,SAASa,QAAQC,QAAQC,SAA3CxH,OACFC,EAAUO,EAAOH,IAAI,SAAAK,GACvB,MAAM,CACFZ,IAAKY,EAAMoB,SAAShC,IACpBC,IAAKW,EAAMoB,SAAS/B,IACpBsB,QAAQ,EACRjB,UAAU,EACVE,GAAII,EAAMJ,MAGlB4G,EAAKtB,SAAS,CAAEpF,SAAQR,SAAQC,cAEnCyG,MAAM,SAACe,GACJb,QAAQC,IAAR,qBAAApF,OAAiCgG,uCAMrC,IAAIC,EAIJ,OAHGvF,KAAKkD,MAAM2B,cACVU,EAAUrI,EAAAC,EAAAC,cAACoI,EAAD1F,OAAAC,OAAA,GAAUC,KAAKkD,MAAf,CAAsBX,iBAAkBvC,KAAKuC,qBAGvDrF,EAAAC,EAAAC,cAAA,OAAKuD,UAAU,OAEXzD,EAAAC,EAAAC,cAAA,UAAQuD,UAAU,cACdzD,EAAAC,EAAAC,cAACqI,EAAD,CAAS1E,SAAUf,KAAK2E,qBAE5BzH,EAAAC,EAAAC,cAAA,QAAM+C,MAAO,CAACuF,QAAQ,SACjBH,EACDrI,EAAAC,EAAAC,cAACuI,EAAD7F,OAAAC,OAAA,GAAUC,KAAKkD,MAAf,CAAqBjE,cAAee,KAAKf,0BAxF3CwB,aCIZmF,EAAcC,QACW,cAA7BlH,OAAOgB,SAASmG,UAEe,UAA7BnH,OAAOgB,SAASmG,UAEhBnH,OAAOgB,SAASmG,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTnE,KAAK,SAAAwE,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtD,QACfiD,UAAUC,cAAcO,YAI1BlC,QAAQC,IACN,gHAKEwB,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB7B,QAAQC,IAAI,sCAGRwB,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,UAO5B/B,MAAM,SAAAC,GACLC,QAAQD,MAAM,4CAA6CA,KC1FjEsC,IAASC,OAAO7J,EAAAC,EAAAC,cAAC4J,EAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBhB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,oBAAwBzI,OAAOgB,SAAS0H,MACpDC,SAAW3I,OAAOgB,SAAS2H,OAIvC,OAGF3I,OAAO4I,iBAAiB,OAAQ,WAC9B,IAAMtB,EAAK,GAAA3G,OAAM8H,oBAAN,sBAEPxB,GAgEV,SAAiCK,EAAOC,GAEtCxE,MAAMuE,GACHnE,KAAK,SAAAwC,GAEJ,IAAMkD,EAAclD,EAASmD,QAAQC,IAAI,gBAEnB,MAApBpD,EAASqD,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CzB,UAAUC,cAAcyB,MAAM/F,KAAK,SAAAwE,GACjCA,EAAawB,aAAahG,KAAK,WAC7BnD,OAAOgB,SAASoI,aAKpB/B,EAAgBC,EAAOC,KAG1B3B,MAAM,WACLE,QAAQC,IACN,mEArFAsD,CAAwB/B,EAAOC,GAI/BC,UAAUC,cAAcyB,MAAM/F,KAAK,WACjC2C,QAAQC,IACN,+GAMJsB,EAAgBC,EAAOC,MCvC/BE","file":"static/js/main.40e785d0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\n\n\nconst MyMapComponent = withScriptjs(withGoogleMap((props) =>\n    // customizing the map, center it based of the venues locations\n  <GoogleMap\n    role=\"application\"\n    aria-label=\"Google Map\"\n    defaultZoom={8}\n    zoom={props.zoom}\n    defaultCenter={{ lat: -34.397, lng: 150.644 }}\n    center={props.center}\n  >\n    {props.markers &&\n        props.markers.filter(marker => marker.isVisble).map((marker, id) => {\n            const venueInfo = props.venues.find(venue => venue.id === marker.id);\n            return(\n                // add a markers that contain details about the location\n                <Marker\n                key={id}\n                position={{ lat: marker.lat, lng: marker.lng }}\n                animation= {window.google.maps.Animation.DROP}\n                onClick={() => props.controlMarker(marker)}\n\n                >\n                    {marker.isOpen &&\n                        venueInfo.bestPhoto && (\n                        <InfoWindow>\n                            <React.Fragment>\n                                <img src={`${venueInfo.bestPhoto.prefix}100x100${venueInfo.bestPhoto.suffix}`} alt={`${venueInfo.name}`}/>\n                                <p> {venueInfo.name}</p>\n                                <p> {venueInfo.location.address}</p>\n                            </React.Fragment>\n                        </InfoWindow>\n                        // Data collected from FourSquare\n                    )}\n                </Marker>\n            );\n        })}\n\n  </GoogleMap>\n))\n\n\nexport default class Maps extends Component {\n\n\n    render() {\n        return (\n            <MyMapComponent\n            {...this.props}\n\n            googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyAk5yr8x3RpnZuSbnq4tAV6Uzrme5u6QC4\"\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: `100vh`, width:'-webkit-fill-available'  }} />}\n            mapElement={<div style={{ height: `100%`, overflow:'auto', position:'sticky'}} />}\n            />\n        );\n    }\n}\n","import React from 'react';\n\nconst SideButt = props => (\n    // header button, control the sideBar menu to open and close \n    <button  aria-label='sideBar button'  className='toggle-button' onClick={props.click}>\n        <div className='toggle-button_line'/>\n        <div className='toggle-button_line'/>\n        <div className='toggle-button_line'/>\n    </button>\n);\n\nexport default SideButt;\n","import React from 'react';\nimport SideButt from './SideButt';\n\nconst SideBar = props =>(\n        <nav className=\"toolbar_navigation\">\n        <div>\n            <SideButt click={props.drawOpen}/>\n        </div>\n        </nav>\n);\nexport default SideBar;\n","// this file collect data from FourSquare\n// it collect food locations in the new york city area\n\nclass Source {\n    static baseURL(){\n        return 'https://api.foursquare.com/v2';\n    }\n    static auth(){\n        const keys ={\n            client_id: 'QYUZY0I3WVSOB0P0PT3LZ4VILEVPS4RP3A1JCFIYBUYP3P4O',\n            client_secret: 'ASB14XYFPHQBRIUWGATIHKH03J3Y3AQP1AQ31VXPI4V1BZ1M',\n            v: '20182507'\n        }\n        return Object.keys(keys)\n            .map(key => `${key}=${keys[key]}`)\n            .join('&')\n    }\n    static header(){\n        return{\n            Accept: \"application/json\"\n        }\n    }\n    static simpleFetch(endPiont, method, url){\n        return fetch(`${Source.baseURL()}${endPiont}?${Source.auth()}&${Source.urlBuilder(\n            url\n        )}`).then(res => res.json())\n    }\n    static urlBuilder(url){\n        if(!url){\n            return \"\";\n        }\n        return Object.keys(url)\n            .map(key => `${key}=${url[key]}`)\n            .join('&');\n    }\n\n}\n\nexport default class API {\n    static search(url) {\n        return Source.simpleFetch(\"/venues/search\", \"GET\", url);\n    }\n    static getVenuesDetails(VID){\n        return Source.simpleFetch(`/venues/${VID}`, \"GET\");\n    }\n    static getVenuesPhoto(VID){\n        return Source.simpleFetch(`/venues/${VID}/photos`, \"GET\");\n    }\n}\n// venues Data from FourSquare\n","import React, { Component } from 'react';\n\n\n// the li tag location icon and name \nclass ListItem extends Component {\n    render() {\n        return(\n            <li   role='button' tabIndex=\"0\" aria-label={this.props.name}  className='Item' onClick={() => this.props.controlListClick(this.props)}>\n                <img src={this.props.categories[0].icon.prefix+'30'+this.props.categories[0].icon.suffix}\n                alt={this.props.categories[0].name}/>\n                {this.props.name}\n            </li>\n        );\n    }\n}\nexport default ListItem;\n","import React, { Component } from 'react';\nimport ListItem from './Item';\n\n\n// it add the <li> tag from ListItem and make it clikable to view the location marker\nclass VenueList extends Component {\n    render() {\n        return(\n            <ol className='venueList' aria-label='venues location' tabIndex=\"0\">\n                {this.props.venues &&\n                    this.props.venues.map((venue) => (\n                        <ListItem key={venue.id} {...venue} controlListClick={this.props.controlListClick}/>\n                    ))}\n            </ol>\n        );\n    }\n}\nexport default VenueList;\n","import React, { Component } from 'react';\nimport VenueList from './List';\n\n\n\n\n\nclass Side extends Component {\n    constructor(){\n        super()\n        this.state ={\n            query:'',\n            venues: [],\n        }\n    }\n    handleFilterVenues = () =>{\n        if (this.state.query.trim() !== \"\") {\n            const venues = this.props.venues.filter(venue =>\n                venue.name.toLowerCase().includes(this.state.query.toLowerCase())\n            )\n            return venues;\n        }\n        return this.props.venues;\n    };\n    handleChange = e => {\n        this.setState({query: e.target.value});\n        const markers = this.props.venues.map(venue =>{\n            const isMatched = venue.name.toLowerCase().includes( e.target.value.toLowerCase());\n            const marker = this.props.markers.find(marker => marker.id === venue.id);\n            if(isMatched){\n                marker.isVisble = true;\n            }else {\n                marker.isVisble = false;\n            }\n            return marker;\n        });\n        this.props.updateState({markers})\n    }\n\n    render() {\n        return(\n            // the side bar menu that contain the filter input and venues datails\n            <nav  aria-label=\"sidebar menu\" className='sideBar'>\n                <p>Bart Location</p>\n                <input aria-label='filter locations' tabIndex=\"0\" type={'search'} id={'search'} placeholder={'Filter'}\n                onChange={this.handleChange}/>\n                <VenueList\n                {...this.props}\n                venues={this.handleFilterVenues()}\n                controlListClick={this.props.controlListClick}/>\n            </nav>\n        );\n    }\n}\nexport default Side;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Maps from './components/Maps';\nimport SideBar from './components/SideBar';\nimport API from './components/Source';\nimport Side from './components/Side';\n\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state= {\n            venues:[],\n            markers:[],\n            center: [],\n            zoom: 12,\n            sideBarOpen: false,\n            updateState: obj => {\n                this.setState(obj)\n            }\n        };\n    }\n\n\n    // close the a marker is open\n    closeMarker = () => {\n        const markers = this.state.markers.map(marker =>{\n            marker.isOpen = false;\n            return marker\n        });\n        this.setState({markers: Object.assign(this.state.markers, markers)});\n    }\n    controlMarker = (marker) =>{\n        this.closeMarker();\n        marker.isOpen = true;\n        this.setState({markers: Object.assign(this.state.markers, marker)});\n        const venue = this.state.venues.find(venue => venue.id === marker.id);\n        API.getVenuesDetails(marker.id).then(res => {\n            const newVenue = Object.assign(venue, res.response.venue);\n            this.setState({venues: Object.assign(this.state.venues, newVenue)});\n        })\n        .catch(error => {\n            console.log('Error loading venue details', error);\n        })\n    }\n\n    // when venues list is click under the menu it open the targeted location marker\n    controlListClick = venue => {\n        const marker = this.state.markers.find(marker => marker.id === venue.id);\n        this.controlMarker(marker)\n    }\n    // set the sideBar true or false\n    handleSideBarOpen = () =>{\n        this.setState((prevState) => {\n            return {sideBarOpen: !prevState.sideBarOpen}\n        });\n    }\n\n    //collecting locations informtions\n    componentDidMount(){\n        API.search({\n            query: 'food',\n            near: 'NY',\n        }).then(results => {\n            const { venues} = results.response;\n            const { center} = results.response.geocode.feature.geometry;\n            const markers = venues.map(venue =>{\n                return{\n                    lat: venue.location.lat,\n                    lng: venue.location.lng,\n                    isOpen: false,\n                    isVisble: true,\n                    id: venue.id\n                };\n            });\n            this.setState({ venues, center, markers})\n        })\n        .catch((err) =>{\n            console.log(`Data not loading  ${err}`);\n        });\n    }\n\n    render() {\n        // help control the sideBar menu by targeting the header button\n        let sideOpen;\n        if(this.state.sideBarOpen){\n            sideOpen =<Side {...this.state} controlListClick={this.controlListClick}/>;\n        }\n        return (\n            <div className=\"App\">\n\n                <header className=\"App-header\">\n                    <SideBar drawOpen={this.handleSideBarOpen}/>\n                </header>\n                <main style={{display:'flex'}}>\n                    {sideOpen}\n                    <Maps {...this.state}controlMarker={this.controlMarker}/>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}